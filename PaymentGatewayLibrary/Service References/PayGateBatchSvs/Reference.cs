//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TCG.PaymentGatewayLibrary.PayGateBatchSvs {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:paygate.paybatch", ConfigurationName="PayGateBatchSvs.PaybatchPortType")]
    public interface PaybatchPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:paygate.paybatch#Auth", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Return")]
        TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchReturn Auth(string BatchReference, string NotificationUrl, TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchData BatchData);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:paygate.paybatch#Auth", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Return")]
        System.Threading.Tasks.Task<TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchReturn> AuthAsync(string BatchReference, string NotificationUrl, TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchData BatchData);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:paygate.paybatch#Confirm", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Return")]
        TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchReturn Confirm(string UploadID);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:paygate.paybatch#Confirm", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Return")]
        System.Threading.Tasks.Task<TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchReturn> ConfirmAsync(string UploadID);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:paygate.paybatch#Query", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Return")]
        TCG.PaymentGatewayLibrary.PayGateBatchSvs.QueryReturn Query(string UploadID);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:paygate.paybatch#Query", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Return")]
        System.Threading.Tasks.Task<TCG.PaymentGatewayLibrary.PayGateBatchSvs.QueryReturn> QueryAsync(string UploadID);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:paygate.paybatch")]
    public partial class BatchData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string[] batchLineField;
        
        /// <remarks/>
        public string[] BatchLine {
            get {
                return this.batchLineField;
            }
            set {
                this.batchLineField = value;
                this.RaisePropertyChanged("BatchLine");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:paygate.paybatch")]
    public partial class QueryReturn : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string referenceField;
        
        private string dateUploadedField;
        
        private string dateCompletedField;
        
        private int successField;
        
        private int failField;
        
        private int unprocessedField;
        
        private string[] transResultField;
        
        /// <remarks/>
        public string Reference {
            get {
                return this.referenceField;
            }
            set {
                this.referenceField = value;
                this.RaisePropertyChanged("Reference");
            }
        }
        
        /// <remarks/>
        public string DateUploaded {
            get {
                return this.dateUploadedField;
            }
            set {
                this.dateUploadedField = value;
                this.RaisePropertyChanged("DateUploaded");
            }
        }
        
        /// <remarks/>
        public string DateCompleted {
            get {
                return this.dateCompletedField;
            }
            set {
                this.dateCompletedField = value;
                this.RaisePropertyChanged("DateCompleted");
            }
        }
        
        /// <remarks/>
        public int Success {
            get {
                return this.successField;
            }
            set {
                this.successField = value;
                this.RaisePropertyChanged("Success");
            }
        }
        
        /// <remarks/>
        public int Fail {
            get {
                return this.failField;
            }
            set {
                this.failField = value;
                this.RaisePropertyChanged("Fail");
            }
        }
        
        /// <remarks/>
        public int Unprocessed {
            get {
                return this.unprocessedField;
            }
            set {
                this.unprocessedField = value;
                this.RaisePropertyChanged("Unprocessed");
            }
        }
        
        /// <remarks/>
        public string[] TransResult {
            get {
                return this.transResultField;
            }
            set {
                this.transResultField = value;
                this.RaisePropertyChanged("TransResult");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:paygate.paybatch")]
    public partial class InvalidData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int lineField;
        
        private string reasonField;
        
        /// <remarks/>
        public int Line {
            get {
                return this.lineField;
            }
            set {
                this.lineField = value;
                this.RaisePropertyChanged("Line");
            }
        }
        
        /// <remarks/>
        public string Reason {
            get {
                return this.reasonField;
            }
            set {
                this.reasonField = value;
                this.RaisePropertyChanged("Reason");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:paygate.paybatch")]
    public partial class BatchReturn : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int totalField;
        
        private int validField;
        
        private int invalidField;
        
        private InvalidData[] invalidReasonField;
        
        private string uploadIDField;
        
        /// <remarks/>
        public int Total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
                this.RaisePropertyChanged("Total");
            }
        }
        
        /// <remarks/>
        public int Valid {
            get {
                return this.validField;
            }
            set {
                this.validField = value;
                this.RaisePropertyChanged("Valid");
            }
        }
        
        /// <remarks/>
        public int Invalid {
            get {
                return this.invalidField;
            }
            set {
                this.invalidField = value;
                this.RaisePropertyChanged("Invalid");
            }
        }
        
        /// <remarks/>
        public InvalidData[] InvalidReason {
            get {
                return this.invalidReasonField;
            }
            set {
                this.invalidReasonField = value;
                this.RaisePropertyChanged("InvalidReason");
            }
        }
        
        /// <remarks/>
        public string UploadID {
            get {
                return this.uploadIDField;
            }
            set {
                this.uploadIDField = value;
                this.RaisePropertyChanged("UploadID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PaybatchPortTypeChannel : TCG.PaymentGatewayLibrary.PayGateBatchSvs.PaybatchPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PaybatchPortTypeClient : System.ServiceModel.ClientBase<TCG.PaymentGatewayLibrary.PayGateBatchSvs.PaybatchPortType>, TCG.PaymentGatewayLibrary.PayGateBatchSvs.PaybatchPortType {
        
        public PaybatchPortTypeClient() {
        }
        
        public PaybatchPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PaybatchPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaybatchPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PaybatchPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchReturn Auth(string BatchReference, string NotificationUrl, TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchData BatchData) {
            return base.Channel.Auth(BatchReference, NotificationUrl, BatchData);
        }
        
        public System.Threading.Tasks.Task<TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchReturn> AuthAsync(string BatchReference, string NotificationUrl, TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchData BatchData) {
            return base.Channel.AuthAsync(BatchReference, NotificationUrl, BatchData);
        }
        
        public TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchReturn Confirm(string UploadID) {
            return base.Channel.Confirm(UploadID);
        }
        
        public System.Threading.Tasks.Task<TCG.PaymentGatewayLibrary.PayGateBatchSvs.BatchReturn> ConfirmAsync(string UploadID) {
            return base.Channel.ConfirmAsync(UploadID);
        }
        
        public TCG.PaymentGatewayLibrary.PayGateBatchSvs.QueryReturn Query(string UploadID) {
            return base.Channel.Query(UploadID);
        }
        
        public System.Threading.Tasks.Task<TCG.PaymentGatewayLibrary.PayGateBatchSvs.QueryReturn> QueryAsync(string UploadID) {
            return base.Channel.QueryAsync(UploadID);
        }
    }
}
