//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.81.0.
// 
namespace TCG.PaymentGatewayLibrary.SageNetcash.NIWS.Validation
{
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "BasicHttpBinding_INIWS_Validation", Namespace = "http://tempuri.org/")]
    public partial class NIWS_Validation : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback ValidateBankAccountOperationCompleted;

        private System.Threading.SendOrPostCallback ValidateBranchCodeOperationCompleted;

        private System.Threading.SendOrPostCallback GetBankListOperationCompleted;

        private System.Threading.SendOrPostCallback GetBankListWithDefaultBranchCodeOperationCompleted;

        private System.Threading.SendOrPostCallback GetBranchListOperationCompleted;

        private System.Threading.SendOrPostCallback ValidateIdOperationCompleted;

        /// <remarks/>
        public NIWS_Validation()
        {
            this.Url = "https://ws.sagepay.co.za/NIWS/NIWS_Validation.svc";
        }

        /// <remarks/>
        public event ValidateBankAccountCompletedEventHandler ValidateBankAccountCompleted;

        /// <remarks/>
        public event ValidateBranchCodeCompletedEventHandler ValidateBranchCodeCompleted;

        /// <remarks/>
        public event GetBankListCompletedEventHandler GetBankListCompleted;

        /// <remarks/>
        public event GetBankListWithDefaultBranchCodeCompletedEventHandler GetBankListWithDefaultBranchCodeCompleted;

        /// <remarks/>
        public event GetBranchListCompletedEventHandler GetBranchListCompleted;

        /// <remarks/>
        public event ValidateIdCompletedEventHandler ValidateIdCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INIWS_Validation/ValidateBankAccount", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ValidateBankAccount([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ServiceKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string AccountNumber, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string BranchCode, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string AccountType)
        {
            object[] results = this.Invoke("ValidateBankAccount", new object[] {
                    ServiceKey,
                    AccountNumber,
                    BranchCode,
                    AccountType});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginValidateBankAccount(string ServiceKey, string AccountNumber, string BranchCode, string AccountType, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ValidateBankAccount", new object[] {
                    ServiceKey,
                    AccountNumber,
                    BranchCode,
                    AccountType}, callback, asyncState);
        }

        /// <remarks/>
        public string EndValidateBankAccount(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ValidateBankAccountAsync(string ServiceKey, string AccountNumber, string BranchCode, string AccountType)
        {
            this.ValidateBankAccountAsync(ServiceKey, AccountNumber, BranchCode, AccountType, null);
        }

        /// <remarks/>
        public void ValidateBankAccountAsync(string ServiceKey, string AccountNumber, string BranchCode, string AccountType, object userState)
        {
            if ((this.ValidateBankAccountOperationCompleted == null))
            {
                this.ValidateBankAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateBankAccountOperationCompleted);
            }
            this.InvokeAsync("ValidateBankAccount", new object[] {
                    ServiceKey,
                    AccountNumber,
                    BranchCode,
                    AccountType}, this.ValidateBankAccountOperationCompleted, userState);
        }

        private void OnValidateBankAccountOperationCompleted(object arg)
        {
            if ((this.ValidateBankAccountCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateBankAccountCompleted(this, new ValidateBankAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INIWS_Validation/ValidateBranchCode", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ValidateBranchCode([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ServiceKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string BranchCode)
        {
            object[] results = this.Invoke("ValidateBranchCode", new object[] {
                    ServiceKey,
                    BranchCode});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginValidateBranchCode(string ServiceKey, string BranchCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ValidateBranchCode", new object[] {
                    ServiceKey,
                    BranchCode}, callback, asyncState);
        }

        /// <remarks/>
        public string EndValidateBranchCode(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ValidateBranchCodeAsync(string ServiceKey, string BranchCode)
        {
            this.ValidateBranchCodeAsync(ServiceKey, BranchCode, null);
        }

        /// <remarks/>
        public void ValidateBranchCodeAsync(string ServiceKey, string BranchCode, object userState)
        {
            if ((this.ValidateBranchCodeOperationCompleted == null))
            {
                this.ValidateBranchCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateBranchCodeOperationCompleted);
            }
            this.InvokeAsync("ValidateBranchCode", new object[] {
                    ServiceKey,
                    BranchCode}, this.ValidateBranchCodeOperationCompleted, userState);
        }

        private void OnValidateBranchCodeOperationCompleted(object arg)
        {
            if ((this.ValidateBranchCodeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateBranchCodeCompleted(this, new ValidateBranchCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INIWS_Validation/GetBankList", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string GetBankList([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ServiceKey)
        {
            object[] results = this.Invoke("GetBankList", new object[] {
                    ServiceKey});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetBankList(string ServiceKey, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetBankList", new object[] {
                    ServiceKey}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetBankList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetBankListAsync(string ServiceKey)
        {
            this.GetBankListAsync(ServiceKey, null);
        }

        /// <remarks/>
        public void GetBankListAsync(string ServiceKey, object userState)
        {
            if ((this.GetBankListOperationCompleted == null))
            {
                this.GetBankListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankListOperationCompleted);
            }
            this.InvokeAsync("GetBankList", new object[] {
                    ServiceKey}, this.GetBankListOperationCompleted, userState);
        }

        private void OnGetBankListOperationCompleted(object arg)
        {
            if ((this.GetBankListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankListCompleted(this, new GetBankListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INIWS_Validation/GetBankListWithDefaultBranchCode", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string GetBankListWithDefaultBranchCode([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ServiceKey)
        {
            object[] results = this.Invoke("GetBankListWithDefaultBranchCode", new object[] {
                    ServiceKey});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetBankListWithDefaultBranchCode(string ServiceKey, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetBankListWithDefaultBranchCode", new object[] {
                    ServiceKey}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetBankListWithDefaultBranchCode(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetBankListWithDefaultBranchCodeAsync(string ServiceKey)
        {
            this.GetBankListWithDefaultBranchCodeAsync(ServiceKey, null);
        }

        /// <remarks/>
        public void GetBankListWithDefaultBranchCodeAsync(string ServiceKey, object userState)
        {
            if ((this.GetBankListWithDefaultBranchCodeOperationCompleted == null))
            {
                this.GetBankListWithDefaultBranchCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBankListWithDefaultBranchCodeOperationCompleted);
            }
            this.InvokeAsync("GetBankListWithDefaultBranchCode", new object[] {
                    ServiceKey}, this.GetBankListWithDefaultBranchCodeOperationCompleted, userState);
        }

        private void OnGetBankListWithDefaultBranchCodeOperationCompleted(object arg)
        {
            if ((this.GetBankListWithDefaultBranchCodeCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBankListWithDefaultBranchCodeCompleted(this, new GetBankListWithDefaultBranchCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INIWS_Validation/GetBranchList", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string GetBranchList([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ServiceKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string BankName, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string BranchName)
        {
            object[] results = this.Invoke("GetBranchList", new object[] {
                    ServiceKey,
                    BankName,
                    BranchName});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetBranchList(string ServiceKey, string BankName, string BranchName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetBranchList", new object[] {
                    ServiceKey,
                    BankName,
                    BranchName}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetBranchList(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetBranchListAsync(string ServiceKey, string BankName, string BranchName)
        {
            this.GetBranchListAsync(ServiceKey, BankName, BranchName, null);
        }

        /// <remarks/>
        public void GetBranchListAsync(string ServiceKey, string BankName, string BranchName, object userState)
        {
            if ((this.GetBranchListOperationCompleted == null))
            {
                this.GetBranchListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBranchListOperationCompleted);
            }
            this.InvokeAsync("GetBranchList", new object[] {
                    ServiceKey,
                    BankName,
                    BranchName}, this.GetBranchListOperationCompleted, userState);
        }

        private void OnGetBranchListOperationCompleted(object arg)
        {
            if ((this.GetBranchListCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBranchListCompleted(this, new GetBranchListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INIWS_Validation/ValidateId", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string ValidateId([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ServiceKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string IdNumber)
        {
            object[] results = this.Invoke("ValidateId", new object[] {
                    ServiceKey,
                    IdNumber});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginValidateId(string ServiceKey, string IdNumber, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("ValidateId", new object[] {
                    ServiceKey,
                    IdNumber}, callback, asyncState);
        }

        /// <remarks/>
        public string EndValidateId(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void ValidateIdAsync(string ServiceKey, string IdNumber)
        {
            this.ValidateIdAsync(ServiceKey, IdNumber, null);
        }

        /// <remarks/>
        public void ValidateIdAsync(string ServiceKey, string IdNumber, object userState)
        {
            if ((this.ValidateIdOperationCompleted == null))
            {
                this.ValidateIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateIdOperationCompleted);
            }
            this.InvokeAsync("ValidateId", new object[] {
                    ServiceKey,
                    IdNumber}, this.ValidateIdOperationCompleted, userState);
        }

        private void OnValidateIdOperationCompleted(object arg)
        {
            if ((this.ValidateIdCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateIdCompleted(this, new ValidateIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    public delegate void ValidateBankAccountCompletedEventHandler(object sender, ValidateBankAccountCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateBankAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ValidateBankAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    public delegate void ValidateBranchCodeCompletedEventHandler(object sender, ValidateBranchCodeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateBranchCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ValidateBranchCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    public delegate void GetBankListCompletedEventHandler(object sender, GetBankListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetBankListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    public delegate void GetBankListWithDefaultBranchCodeCompletedEventHandler(object sender, GetBankListWithDefaultBranchCodeCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBankListWithDefaultBranchCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetBankListWithDefaultBranchCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    public delegate void GetBranchListCompletedEventHandler(object sender, GetBranchListCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBranchListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetBranchListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    public delegate void ValidateIdCompletedEventHandler(object sender, ValidateIdCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal ValidateIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

}

