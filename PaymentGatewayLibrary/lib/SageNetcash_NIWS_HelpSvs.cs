//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.81.0.
// 

namespace TCG.PaymentGatewayLibrary.SageNetcash.NIWS.Help
{
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "BasicHttpsBinding_INIWS_Help", Namespace = "http://tempuri.org/")]
    public partial class NIWS_Help : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback QueryPredefinedPaymentOperationCompleted;

        private System.Threading.SendOrPostCallback GetFileStructureOperationCompleted;

        private System.Threading.SendOrPostCallback CreateFileTemplateOperationCompleted;

        private System.Threading.SendOrPostCallback RequestNIFConvertedFileOperationCompleted;

        /// <remarks/>
        public NIWS_Help()
        {
            this.Url = "https://ws.sagepay.co.za/NIWS/NIWS_Help.svc";
        }

        /// <remarks/>
        public event QueryPredefinedPaymentCompletedEventHandler QueryPredefinedPaymentCompleted;

        /// <remarks/>
        public event GetFileStructureCompletedEventHandler GetFileStructureCompleted;

        /// <remarks/>
        public event CreateFileTemplateCompletedEventHandler CreateFileTemplateCompleted;

        /// <remarks/>
        public event RequestNIFConvertedFileCompletedEventHandler RequestNIFConvertedFileCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INIWS_Help/QueryPredefinedPayment", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string QueryPredefinedPayment([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ServiceKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string SearchString)
        {
            object[] results = this.Invoke("QueryPredefinedPayment", new object[] {
                    ServiceKey,
                    SearchString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginQueryPredefinedPayment(string ServiceKey, string SearchString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("QueryPredefinedPayment", new object[] {
                    ServiceKey,
                    SearchString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndQueryPredefinedPayment(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void QueryPredefinedPaymentAsync(string ServiceKey, string SearchString)
        {
            this.QueryPredefinedPaymentAsync(ServiceKey, SearchString, null);
        }

        /// <remarks/>
        public void QueryPredefinedPaymentAsync(string ServiceKey, string SearchString, object userState)
        {
            if ((this.QueryPredefinedPaymentOperationCompleted == null))
            {
                this.QueryPredefinedPaymentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryPredefinedPaymentOperationCompleted);
            }
            this.InvokeAsync("QueryPredefinedPayment", new object[] {
                    ServiceKey,
                    SearchString}, this.QueryPredefinedPaymentOperationCompleted, userState);
        }

        private void OnQueryPredefinedPaymentOperationCompleted(object arg)
        {
            if ((this.QueryPredefinedPaymentCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryPredefinedPaymentCompleted(this, new QueryPredefinedPaymentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INIWS_Help/GetFileStructure", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string GetFileStructure([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ServiceKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string FileInstruction)
        {
            object[] results = this.Invoke("GetFileStructure", new object[] {
                    ServiceKey,
                    FileInstruction});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetFileStructure(string ServiceKey, string FileInstruction, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetFileStructure", new object[] {
                    ServiceKey,
                    FileInstruction}, callback, asyncState);
        }

        /// <remarks/>
        public string EndGetFileStructure(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void GetFileStructureAsync(string ServiceKey, string FileInstruction)
        {
            this.GetFileStructureAsync(ServiceKey, FileInstruction, null);
        }

        /// <remarks/>
        public void GetFileStructureAsync(string ServiceKey, string FileInstruction, object userState)
        {
            if ((this.GetFileStructureOperationCompleted == null))
            {
                this.GetFileStructureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFileStructureOperationCompleted);
            }
            this.InvokeAsync("GetFileStructure", new object[] {
                    ServiceKey,
                    FileInstruction}, this.GetFileStructureOperationCompleted, userState);
        }

        private void OnGetFileStructureOperationCompleted(object arg)
        {
            if ((this.GetFileStructureCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFileStructureCompleted(this, new GetFileStructureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INIWS_Help/CreateFileTemplate", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string CreateFileTemplate([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ServiceKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string Version, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ServiceInstruction, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string BatchName, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ActionDate, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string SoftwareVendorCode)
        {
            object[] results = this.Invoke("CreateFileTemplate", new object[] {
                    ServiceKey,
                    Version,
                    ServiceInstruction,
                    BatchName,
                    ActionDate,
                    SoftwareVendorCode});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCreateFileTemplate(string ServiceKey, string Version, string ServiceInstruction, string BatchName, string ActionDate, string SoftwareVendorCode, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("CreateFileTemplate", new object[] {
                    ServiceKey,
                    Version,
                    ServiceInstruction,
                    BatchName,
                    ActionDate,
                    SoftwareVendorCode}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCreateFileTemplate(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void CreateFileTemplateAsync(string ServiceKey, string Version, string ServiceInstruction, string BatchName, string ActionDate, string SoftwareVendorCode)
        {
            this.CreateFileTemplateAsync(ServiceKey, Version, ServiceInstruction, BatchName, ActionDate, SoftwareVendorCode, null);
        }

        /// <remarks/>
        public void CreateFileTemplateAsync(string ServiceKey, string Version, string ServiceInstruction, string BatchName, string ActionDate, string SoftwareVendorCode, object userState)
        {
            if ((this.CreateFileTemplateOperationCompleted == null))
            {
                this.CreateFileTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateFileTemplateOperationCompleted);
            }
            this.InvokeAsync("CreateFileTemplate", new object[] {
                    ServiceKey,
                    Version,
                    ServiceInstruction,
                    BatchName,
                    ActionDate,
                    SoftwareVendorCode}, this.CreateFileTemplateOperationCompleted, userState);
        }

        private void OnCreateFileTemplateOperationCompleted(object arg)
        {
            if ((this.CreateFileTemplateCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateFileTemplateCompleted(this, new CreateFileTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/INIWS_Help/RequestNIFConvertedFile", RequestNamespace = "http://tempuri.org/", ResponseNamespace = "http://tempuri.org/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable = true)]
        public string RequestNIFConvertedFile([System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string ServiceKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable = true)] string File, bool IsCompact, [System.Xml.Serialization.XmlIgnoreAttribute()] bool IsCompactSpecified)
        {
            object[] results = this.Invoke("RequestNIFConvertedFile", new object[] {
                    ServiceKey,
                    File,
                    IsCompact,
                    IsCompactSpecified});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRequestNIFConvertedFile(string ServiceKey, string File, bool IsCompact, bool IsCompactSpecified, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RequestNIFConvertedFile", new object[] {
                    ServiceKey,
                    File,
                    IsCompact,
                    IsCompactSpecified}, callback, asyncState);
        }

        /// <remarks/>
        public string EndRequestNIFConvertedFile(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void RequestNIFConvertedFileAsync(string ServiceKey, string File, bool IsCompact, bool IsCompactSpecified)
        {
            this.RequestNIFConvertedFileAsync(ServiceKey, File, IsCompact, IsCompactSpecified, null);
        }

        /// <remarks/>
        public void RequestNIFConvertedFileAsync(string ServiceKey, string File, bool IsCompact, bool IsCompactSpecified, object userState)
        {
            if ((this.RequestNIFConvertedFileOperationCompleted == null))
            {
                this.RequestNIFConvertedFileOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestNIFConvertedFileOperationCompleted);
            }
            this.InvokeAsync("RequestNIFConvertedFile", new object[] {
                    ServiceKey,
                    File,
                    IsCompact,
                    IsCompactSpecified}, this.RequestNIFConvertedFileOperationCompleted, userState);
        }

        private void OnRequestNIFConvertedFileOperationCompleted(object arg)
        {
            if ((this.RequestNIFConvertedFileCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestNIFConvertedFileCompleted(this, new RequestNIFConvertedFileCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    public delegate void QueryPredefinedPaymentCompletedEventHandler(object sender, QueryPredefinedPaymentCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryPredefinedPaymentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QueryPredefinedPaymentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    public delegate void GetFileStructureCompletedEventHandler(object sender, GetFileStructureCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFileStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetFileStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    public delegate void CreateFileTemplateCompletedEventHandler(object sender, CreateFileTemplateCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateFileTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal CreateFileTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    public delegate void RequestNIFConvertedFileCompletedEventHandler(object sender, RequestNIFConvertedFileCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.81.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestNIFConvertedFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RequestNIFConvertedFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

}

