using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace TCG.PaymentGateways.Classes.Batch
{
    public class Transaction_Result_Batch
    {
        public List<Transaction_Result_Batch_item> items { get; set; }

        public bool isApproved { get; set; }            // Indicates whether the transaction was successful (True) or unsuccessful (False).
        public bool isPending { get; set; }             // Used in the case of manual release
        public bool isValid { get; set; }               // to flag validation errors
        public bool isReleased { get; set; }            // Used in the case of auto release to indicate if release has been done (if valid and approved and pending then release if is released false, will be set to true if release not required)
        //if not released then call release batch function

        public int numberOfSuccesses { get; set; }
        public int numberOfFailures { get; set; }

        public string ResultCode { get; set; }          // Indicates the success or failure of the transaction.
        public string ResultText { get; set; }          // Contains a human-readable message explaining the code.
        public string TransactionIndex { get; set; }    // Host-generated transaction identifier, used for Captures, Credits, or Voids.
        public string ProcessorCode { get; set; }       // Return code generated by the processor, or additional gateway response code that may contain more information beyond "Approved" or "Declined".

        public string FullRequest { get; set; }         // Raw Request Sent
        public string FullResponse { get; set; }        // Raw Request Returned

        public bool hasServerError { get; set; }        // If the server threw an error on our side
        public string ErrorCode { get; set; }           // Additional code returned for declined or failed transactions.
        public string ErrorText { get; set; }           // Description of the error which occurred.
    }

    public class Transaction_Result_Batch_item
    {
        public long paymentID { get; set; }             //the related payment id
        public int sequenceNumber { get; set; }
        public bool isApproved { get; set; }            // Indicates whether the transaction was successful (True) or unsuccessful (False).
        public bool needsManualReview { get; set; }
        public string ErrorCode { get; set; }
        public string ErrorText { get; set; }
        public string FullResult { get; set; }
    }
}
